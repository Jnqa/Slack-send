name: 'Upload to S3'
description: ''
inputs:
  MESSAGE_TEXT:
    description: 'Comment'
    required: true
    default: 'None'
  SLACK_TOKEN:
    description: 'SLACK TOKEN'
    required: true
    default: 'no token'
  CHANNELS:
    description: 'Slack channels ID where message will be posted (separated with ,)'
    required: true
    default: '' 
  FILENAME:
    description: 'Attachment'
    required: false
    default: ''
  ERROR_TEXT:
    description: 'Message, if file was not uploaded'
    required: false
    default: '⚠ Ошибка прикрепления файла'


runs:
  using: "composite"
  steps: 
    - name: Install slack_sdk 
      shell: bash
      run: pip3 install slack_sdk

    - name: Run Script
      shell: python3 {0}
      run: |
        from slack_sdk import WebClient
        from slack_sdk.errors import SlackApiError
        import json

        client = WebClient(token="${{ inputs.SLACK_TOKEN }}")

        try:
            if "${{ inputs.FILENAME }}":
                response = json.loads(client.files_upload(channels="${{ inputs.CHANNELS }}",
                                           initial_comment="""${{ inputs.MESSAGE_TEXT }}""",
                                           file="${{ inputs.FILENAME }}",))
                print(f"Result(with file):\n{response}")
                timestamp = response["file"]["timestamp"]
                client.reactions_add(channel="${{ inputs.CHANNELS }}", name="white_check_mark", timestamp=timestamp)
            else:
                response = client.chat_postMessage(channel="${{ inputs.CHANNELS }}",
                                                   text="""${{ inputs.MESSAGE_TEXT }}""" )
                print(f"Result:\n{type(response)}")
        except Exception as error:
            print(f"Error: \n{error}")
            response = json.loads(client.chat_postMessage(channel="${{ inputs.CHANNELS }}",
                                               text="""${{ inputs.MESSAGE_TEXT }}${{ inputs.ERROR_TEXT }}"""))
            print(f"Result:\n{type(response)}")
            timestamp = response["ts"]
            print(f"Timestamp:\n{timestamp}")
            client.reactions_add(channel="${{ inputs.CHANNELS }}", name="warning", timestamp=timestamp)
