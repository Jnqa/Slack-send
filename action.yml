name: 'Upload to S3'
description: ''
inputs:
  MESSAGE_TEXT:
    description: 'Comment'
    required: true
    default: 'None'
  ACTION:
    description: 'send/update'
    required: false
    default: 'send'
  SLACK_TOKEN:
    description: 'SLACK TOKEN'
    required: true
    default: 'no token'
  CHANNELS:
    description: 'Slack channels ID where message will be posted (separated with ,)'
    required: true
    default: '' 
  FILENAME:
    description: 'Attachment'
    required: false
    default: ''
  TIMEOUT:
    description: 'for large files'
    required: false
    default: '74'
  ERROR_TEXT:
    description: 'Message, if file was not uploaded'
    required: false
    default: '⚠ Ошибка прикрепления файла'
  UPLOADIND_TEXT:
    description: 'Message, if file was not uploaded'
    required: false
    default: ':hourglass_flowing_sand: Прикрепление файла...'


runs:
  using: "composite"
  steps: 
    - name: Send via curl
      shell: bash
      run: |
        BLOCKS='[{"type": "section", 
                  "text": 
                    { 
                    "type": "mrkdwn", 
                    "text": ":arrow_forward:*${{ github.workflow }}* (${{ github.ref_name }}) - *${{ github.actor }}* ${{ github.event.head_commit.message }} :sonic:"
                    }
                  }]'
        response=$(curl -d blocks="$BLOCKS" \
                        -d channel=${{ inputs.CHANNELS }} \
                        -H "Authorization: Bearer ${{ inputs.SLACK_TOKEN }}" \
                        https://slack.com/api/chat.postMessage)
        echo $response | jq -r
        TS=$(echo $response | jq -r ".ts")
        CHANNEL=$(echo $response | jq -r ".channel") && echo "CHANNEL=$CHANNEL" >> $GITHUB_ENV || echo "nope"
        echo "TS=$TS" >> $GITHUB_ENV
        echo TS is $TS

    - name: Attach file
      shell: bash
      run: |
        response=$(curl --connect-timeout ${{ inputs.TIMEOUT }} -F file=@${{ inputs.FILENAME }} \
                -F channels=${{ inputs.CHANNELS }} \
                -F ts_from=${{ env.TS }} \
                -H "Authorization: Bearer ${{ inputs.SLACK_TOKEN }}" \
                https://slack.com/api/files.upload) || \
                  response=$(curl -d files=${{ inputs.FILENAME }} \
                          -d channel=${{ inputs.CHANNELS }} \
                          -d ts_from=${{ env.TS }} \
                          -H "Authorization: Bearer ${{ inputs.SLACK_TOKEN }}" \
                          https://slack.com/api/files.upload)
        echo "FILE:"
        echo $response | jq -r
        STATUS=$(echo $response | jq -r ".ok") && echo "STATUS=$STATUS" >> $GITHUB_ENV || echo $response
        FILEID=$(echo $response | jq -r ".file.id") && echo "FILEID=$FILEID" >> $GITHUB_ENV || echo "nope"
        FILENAME=$(echo $response | jq -r ".file.name") && echo "FILENAME=$FILENAME" >> $GITHUB_ENV || echo "nope"
        FILEURL=$(echo $response | jq -r ".file.url_private_download") && echo "FILEURL=$FILEURL" >> $GITHUB_ENV || echo "nope"
        echo File_id - $FILEID
        sleep 3

    - name: update message
      shell: bash
      run: |
        BLOCKS='[
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "${{ inputs.MESSAGE_TEXT }}"
                      },
                      "accessory": {
                        "type": "image",
                        "image_url": "https://emoji.slack-edge.com/T010QJF4V29/zebraniac/4733663b7267281f.png",
                        "alt_text": "goodjob"
                      }
                    },
                    {
                      "type": "actions",
                      "elements": [
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": ":card_file_box: ${{ env.FILENAME }}",
                            "emoji": true
                          },
                          "url": "${{ env.FILEURL }}"
                        }
                      ]
                    }
                  ]'
        echo er check 1
        response2=$(curl -d channel="${{ env.CHANNEL }}" \
                        -d file_ids=["$FILEID"] \
                        -d "ts=${{ env.TS }}" \
                        -d blocks="$BLOCKS" \
                        -H "Authorization: Bearer ${{ inputs.SLACK_TOKEN }}" \
                        https://slack.com/api/chat.update)
        echo $response2
        echo "All ok2!"

    - name: Check status
      if: env.STATUS != 'true'
      shell: bash
      run: |
        exit 1

#    - name: Check status
#      if: env.STATUS != 'true'
#      shell: bash
#      run: |
#        response=$(curl --connect-timeout ${{ inputs.TIMEOUT }} \
#                -d text="${{ inputs.MESSAGE_TEXT }}${{ inputs.ERROR_TEXT }}" \
#                -d channel=${{ inputs.CHANNELS }} \
#                -d file_ids=${{ env.FILEID }} \
#                -H "Authorization: Bearer ${{ inputs.SLACK_TOKEN }}" \
#                https://slack.com/api/chat.postMessage)
#        echo TS=$(echo $response | jq -r ".ts") >> $GITHUB_ENV
#        echo $response | jq -r
#        echo "Emoji"
#        sleep 3
#        response=$(curl --connect-timeout ${{ inputs.TIMEOUT }} \
#                -d text=":card_file_box:" \
#                -d thread_ts=$TS \
#                -d channel=${{ inputs.CHANNELS }} \
#                -H "Authorization: Bearer ${{ inputs.SLACK_TOKEN }}" \
#                https://slack.com/api/chat.postMessage)
#        echo $response | jq -r
